<launch>
    <arg name="world_file"  default="$(env TURTLEBOT_GAZEBO_WORLD_FILE)"/>

    <arg name="base"         value="$(optenv ROBOT_BASE kobuki)"/> <!-- create, roomba -->
    <arg name="battery"      value="$(optenv ROBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 -->
    <arg name="gui"          default="true"/>
    <arg name="stacks"       value="$(optenv ROBOT_STACKS hexagons)"/>  <!-- circles, hexagons -->
    <arg name="laser_sensor" value="$(optenv ROBOT_LASER_SENSOR hokuyo_kinect)"/>  <!-- laser, hokuyo lidar -->
    <arg name="3d_sensor"    value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro -->

    <!-- initial pose -->
    <arg name="pose_initial_x1" default="1.0"/>
    <arg name="pose_initial_y1" default="1.0"/>
    <arg name="pose_initial_theta" default="0.0"/>
    <arg name="pose_initial_x2" default="3.0"/>
    <arg name="pose_initial_y2" default="3.0"/>


    <include file="$(find robot_gazebo)/launch/empty_world.launch">
        <arg name="use_sim_time" value="true"/>
        <arg name="debug" value="false"/>
        <arg name="gui" value="$(arg gui)" />
        <arg name="world_name" value="$(arg world_file)"/>
    </include>

  <!-- Place gazebo frame at map frame -->

    <arg name="robot_1"  default="roomba_1"/>
    <arg name="robot_2" default="roomba_2"/>
    <arg name="robot_3"  default="roomba_3"/>

    <group ns = "$(arg robot_1)">
        <node pkg="tf" type="static_transform_publisher" name="gazebo_map_broadcaster"
            args="-1 -1 0 0 0 0  odom gazebo 100"/>

        <include file="$(find robot_gazebo)/launch/includes/$(arg base).launch.xml">
            <arg name="base" value="$(arg base)"/>
            <arg name="stacks" value="$(arg stacks)"/>
            <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
            <arg name="laser_sensor" value="$(arg laser_sensor)"/>
            <arg name="initial_pose" value="-x $(arg pose_initial_x1) -y $(arg pose_initial_y1) -z $(arg pose_initial_theta)"/>
            <arg name="mobile_base" default="mobile_base1"/>
        </include>

        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
            <param name="publish_frequency" type="double" value="30.0" />
        </node>
    </group>

    <group ns = "$(arg robot_2)">
        <node pkg="tf" type="static_transform_publisher" name="gazebo_map_broadcaster"
            args="-1 -1 0 0 0 0  odom gazebo 100"/>

        <include file="$(find robot_gazebo)/launch/includes/$(arg base).launch.xml">
            <arg name="base" value="$(arg base)"/>
            <arg name="stacks" value="$(arg stacks)"/>
            <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
            <arg name="laser_sensor" value="$(arg laser_sensor)"/>
            <arg name="initial_pose" value="-x $(arg pose_initial_x2) -y $(arg pose_initial_y2) -z $(arg pose_initial_theta)"/>
            <arg name="mobile_base" default="mobile_base2"/>
        </include>

        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
            <param name="publish_frequency" type="double" value="30.0" />
        </node>
    </group>



    <!-- Fake laser -->
    <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
    <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
          args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
        <param name="scan_height" value="10"/>
        <param name="output_frame_id" value="/camera_depth_frame"/>
        <param name="range_min" value="0.45"/>
        <remap from="image" to="/camera/depth/image_raw"/>
        <remap from="scan" to="/fake/scan"/>
    </node>
</launch>
